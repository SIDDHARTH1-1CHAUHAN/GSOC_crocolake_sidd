Metadata-Version: 2.2
Name: crocolake
Version: 0.1.0
Summary: A datalake for ocean observations
Author: Your Name
Author-email: your.email@example.com
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: pandas>=2.0.0
Requires-Dist: xarray>=2023.1.0
Requires-Dist: pyarrow>=14.0.1
Requires-Dist: netCDF4>=1.6.5
Requires-Dist: numpy>=1.24.0
Requires-Dist: dask>=2023.1.0
Requires-Dist: fsspec>=2023.1.0
Dynamic: author
Dynamic: author-email
Dynamic: description
Dynamic: description-content-type
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# CrocoLake

CrocoLake is a datalake project for gathering physical and biogeochemical ocean observations, providing an efficient format and unified interface for data assimilation and ocean modeling activities.

## Project Overview

CrocoLakeTools contains Python modules to:
1. Convert existing datasets to CrocoLake's structure (parquet format with common schema)
2. Provide a unified interface to load datasets into a common dataframe

## Features

- Unified data schema for ocean observations
- Conversion tools for various data formats (CSV, NetCDF)
- Efficient parquet storage format
- Common interface for data loading and manipulation

## Installation

```bash
pip install -r requirements.txt
```

## Usage

```python
from crocolake.loader import DataLoader
from crocolake.converters import CSVConverter, NetCDFConverter

# Load data using the unified interface
loader = DataLoader()
data = loader.load_dataset("dataset_name")

# Convert a new dataset
converter = CSVConverter("path/to/data.csv")
converter.convert()
```

## Project Structure

```
crocolake/
â”œâ”€â”€ __init__.py
â”œâ”€â”€ converters/
â”‚   â”œâ”€â”€ __init__.py
â”‚   â”œâ”€â”€ base.py
â”‚   â”œâ”€â”€ csv_converter.py
â”‚   â””â”€â”€ netcdf_converter.py
â”œâ”€â”€ loader/
â”‚   â”œâ”€â”€ __init__.py
â”‚   â””â”€â”€ data_loader.py
â””â”€â”€ tests/
    â”œâ”€â”€ __init__.py
    â””â”€â”€ test_converters.py
```

## Contributing

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add some amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the LICENSE file for details. 
